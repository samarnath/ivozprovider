production:
  class: \IvozProvider\Model\PeeringContracts
  entity: Ivoz\Domain\Model\PeeringContract\PeeringContract
  fields:
    name:
      title: ngettext('Name', 'Names', 1)
      type: text
      trim: both
      required: true
      default: true
    description:
      title: ngettext('Description', 'Descriptions', 1)
      type: text
      trim: both
      defaultValue:
    brandId:
      title: _('Brand')
      type: select
      required: true
      source:
        data: mapper
        config:
#          mapperName: \IvozProvider\Mapper\Sql\Brands
          entity: \Ivoz\Domain\Model\Brand\Brand
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            Brand.name: asc
    transformationRulesetGroupsTrunkId:
      title: _('Numeric transformation')
      type: select
      source:
        data: mapper
        'null': 'E.164'
        config:
#          mapperName: \IvozProvider\Mapper\Sql\TransformationRulesetGroupsTrunks
          entity: \Ivoz\Domain\Model\TransformationRulesetGroupsTrunk\TransformationRulesetGroupsTrunk
          filterclass: IvozProvider_Klear_Filter_Brand
          fieldName:
            fields:
              - name
            template: '%name%'
          order:
            TransformationRulesetGroupsTrunk.name: asc
      options:
        screens:
          transformationRulesetGroupsTrunksList_screen: false
    externallyRated:
      title: _('Externally rated')
      type: select
      defaultValue: 0
      source:
        data: inline
        values:
          '0':
            title: _("No")
          '1':
            title: _("Yes")
staging:
  _extends: production
testing:
  _extends: production
development:
  _extends: production
localdev:
  _extends: production
