Core\Model\LcrRule\LcrRule:
  repositoryClass: Core\Infrastructure\Persistence\Doctrine\LcrRuleDoctrineRepository
  type: entity
  table: LcrRules
  indexes:
    routingPatternId:
      columns:
        - routingPatternId
    lcr_id:
      columns:
        - lcr_id
    outgoingRoutingId:
      columns:
        - outgoingRoutingId
  id:
    id:
      type: integer
      nullable: false
      options:
        unsigned: true
      id: true
      generator:
        strategy: IDENTITY
  fields:
    lcrId:
      type: integer
      nullable: false
      options:
        unsigned: true
        default: '1'
      column: lcr_id
    prefix:
      type: string
      nullable: true
      length: 100
      options:
        fixed: false
    fromUri:
      type: string
      nullable: true
      length: 255
      options:
        fixed: false
      column: from_uri
    requestUri:
      type: string
      nullable: true
      length: 100
      options:
        fixed: false
      column: request_uri
    stopper:
      type: integer
      nullable: false
      options:
        unsigned: true
        default: '0'
    enabled:
      type: integer
      nullable: false
      options:
        unsigned: true
        default: '1'
    tag:
      type: string
      nullable: false
      length: 55
      options:
        fixed: false
    description:
      type: string
      nullable: false
      length: 500
      options:
        fixed: false
        default: ''
  manyToOne:
    routingPattern:
      targetEntity: \Core\Model\RoutingPattern\RoutingPatternInterface
      cascade: {  }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        routingPatternId:
          referencedColumnName: id
      orphanRemoval: false
    outgoingRouting:
      targetEntity: \Core\Model\OutgoingRouting\OutgoingRoutingInterface
      cascade: {  }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        outgoingRoutingId:
          referencedColumnName: id
          nullable: false
      orphanRemoval: false
  lifecycleCallbacks: {  }
