Core\Model\PeeringContract\PeeringContract:
  repositoryClass: Core\Infrastructure\Persistence\Doctrine\PeeringContractDoctrineRepository
  type: entity
  table: PeeringContracts
  indexes:
    brandId:
      columns:
        - brandId
    PeeringContracts_ibfk_2:
      columns:
        - transformationRulesetGroupsTrunksId
  uniqueConstraints:
    name_per_brand:
      columns:
        - name
        - brandId
  id:
    id:
      type: integer
      nullable: false
      options:
        unsigned: true
      id: true
      generator:
        strategy: IDENTITY
  fields:
    description:
      type: string
      nullable: false
      length: 500
      options:
        fixed: false
        default: ''
    name:
      type: string
      nullable: false
      length: 200
      options:
        fixed: false
    externallyRated:
      type: boolean
      nullable: true
      options:
        default: '0'
      column: externallyRated
  manyToOne:
    brand:
      targetEntity: \Core\Model\Brand\Brand
      cascade: {  }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        brandId:
          referencedColumnName: id
          nullable: false
      orphanRemoval: false
    transformationRulesetGroupsTrunk:
      targetEntity: \Core\Model\TransformationRulesetGroupsTrunk\TransformationRulesetGroupsTrunk
      cascade: {  }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        transformationRulesetGroupsTrunksId:
          referencedColumnName: id
      orphanRemoval: false
  lifecycleCallbacks: {  }
